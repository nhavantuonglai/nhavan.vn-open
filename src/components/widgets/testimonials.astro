---
export interface Props {
	title: string;
	items: Array<{
		src: string;
		alt: string;
		title: string;
	}>;
	isReversed?: boolean;
}

const { items, title, isReversed = false } = Astro.props;
---

<h2 class="px-4 md:px-6">{title}</h2>

<section class="relative not-prose w-full h-48 mb-6 md:mb-62">

	<div class="absolute inset-0">
		<div class="gallery-container px-4 md:px-6">

			<div class={`gallery-row ${isReversed ? 'right-to-left' : 'left-to-right'}`}>
				<div class="gallery-track">

					{items.map(item => item.src && (
						<div class="gallery-item">
							<img src={item.src} title={item.title} alt={item.alt} class="rounded-lg" width="300" height="300" />
						</div>
					))}

					{items.map(item => item.src && (
						<div class="gallery-item">
							<img src={item.src} title={item.title} alt={item.alt} class="rounded-lg" width="300" height="300" />
						</div>
					))}

				</div>
			</div>

		</div>
	</div>

</section>

<style>

	.gallery-container {
		width: 100%;
		height: 100%;
		overflow: hidden;
	}

	.gallery-row {
		overflow: hidden;
		position: relative;
		width: 100%;
		height: 100%;
	}

	.gallery-track {
		display: flex;
		gap: 10px;
		width: max-content;
		height: 100%;
	}

	.gallery-item {
		flex: 0 0 auto;
		width: 300px;
		height: 100%;
	}

	.gallery-item img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.left-to-right .gallery-track {
		animation: scroll-left 30s linear infinite;
	}

	.right-to-left .gallery-track {
		animation: scroll-right 30s linear infinite;
		transform: translateX(calc(-100% + 100vw));
	}

	@keyframes scroll-left {
		0% { transform: translateX(0); }
		100% { transform: translateX(calc(-100% / 2)); }
	}

	@keyframes scroll-right {
		0% { transform: translateX(calc(-100% + 100vw)); }
		100% { transform: translateX(calc(-50% + 100vw)); }
	}

</style>